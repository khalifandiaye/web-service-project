{
  "name": "atom-writer",
  "version": "1.0.2",
  "author": {
    "name": "Nicolas Thouvenin",
    "email": "nthouvenin@gmail.com"
  },
  "contributors": [
    {
      "name": "agoqui"
    }
  ],
  "description": "To generate ATOM feeds quickly",
  "tags": [
    "xml",
    "atom",
    "feed",
    "generator"
  ],
  "homepage": "http://github.com/lindory-project/node-atom-writer",
  "scripts": {
    "test": "nodeunit test/"
  },
  "main": "./index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/lindory-project/node-atom-writer.git"
  },
  "dependencies": {
    "xml-writer": ">=1.2.3"
  },
  "devDependencies": {
    "nodeunit": ">=0.7.3"
  },
  "license": "MIT",
  "engines": {
    "node": ">=0.6.0"
  },
  "readme": "# ATOMWriter for NodeJS\n\n\nATOMWriter is small class, that provides methods to generate an [ATOM feed](http://www.atomenabled.org/).\nXML is still valid by using [XMLWriter](https://github.com/lindory-project/node-xml-writer)\n\n\n## Contributors\n\n  * [Nicolas Thouvenin](https://github.com/touv) \n\n# Installation\n\nWith [npm](http://npmjs.org) do:\n\n    $ npm install atom-writer\n\n\n# Examples\n\n## Basic\n```javascript\n\nvar XMLWriter = require('xml-writer')\nvar ATOMWriter = require('atom-writer')\n\nxw = new XMLWriter(true)\naw = new ATOMWriter(xw)\n\naw\n  .startFeed('urn:xxx:yyy')\n  .writeStartIndex(1)\n  .writeItemsPerPage(10)\n  .writeTotalResults(100)\n  .writeTitle('Index of /')\n  .writeLink('http://exemple.com/feed.xml', 'application/atom+xml', 'self')\n\naw\n  .startEntry('urn:xxx:yyy-1')\n  .writeTitle('Data 1')\n  .writeLink('/1.xml', 'text/xml')\n  .writeLink('/1.txt', 'text/plain')\n  .writeContent('Un', 'text', 'fr')\n  .writeAuthor('Tata Toto', 'toto@exemple.com')\n  .writeCategory('term', 'http://exemple.com#scheme')\n  .endEntry()\n\naw\n  .startEntry('urn:xxx-yyy-2')\n  .writeTitle('Data 2')\n  .writeLink('2.txt', 'text/plain')\n  .writeContent('deux', 'text', 'fr')\n  .writeAuthorRAW('titi.toto@exemple.com')\n  .endEntry()\n\naw\n  .endFeed()\n\nconsole.log(xw.toString())\n\n```\nOutput:\n\n```xml\n<feed xmlns=\"http://www.w3.org/2005/Atom\" xmlns:opensearch=\"http://a9.com/-/spec/opensearch/1.1/\">\n  <id>urn:xxx:yyy</id>\n  <updated>2012-07-02T15:22:40Z</updated>\n  <opensearch:startIndex>1</opensearch:startIndex>\n  <opensearch:itemsPerPage>10</opensearch:itemsPerPage>\n  <opensearch:totalResults>100</opensearch:totalResults>\n  <title type=\"text\">Index of /</title>\n  <link type=\"application/atom+xml\" href=\"http://exemple.com/feed.xml\" rel=\"self\"/>\n  <entry>\n    <id>urn:xxx:yyy-1</id>\n    <updated>2012-07-02T15:22:40Z</updated>\n    <published>2012-07-02T15:22:40Z</published>\n    <title type=\"text\">Data 1</title>\n    <link type=\"text/xml\" href=\"/1.xml\"/>\n    <link type=\"text/plain\" href=\"/1.txt\"/>\n    <content type=\"text\" xml:lang=\"fr\">Un</content>\n    <author>\n      <name>Tata Toto</name>\n      <email>toto@exemple.com</email>\n    </author>\n    <category term=\"term\" scheme=\"http://exemple.com#scheme\"/>\n  </entry>\n  <entry>\n    <id>urn:xxx-yyy-2</id>\n    <updated>2012-07-02T15:22:40Z</updated>\n    <published>2012-07-02T15:22:40Z</published>\n    <title type=\"text\">Data 2</title>\n    <link type=\"text/plain\" href=\"2.txt\"/>\n    <content type=\"text\" xml:lang=\"fr\">deux</content>\n    <author>\n      <name>titi.toto</name>\n      <email>titi.toto@exemple.com</email>\n    </author>\n  </entry>\n</feed>\n```\n\t\n# API Documentation\n\n### construct (XMLWriter o)\n### flush()\n### startFeed(String id, Date updated = null, Date created = null) \n### writeTitle(String value, String type = 'text', String lang = null)\n### writeLink(String value, String type = 'text/html', String rel = null)\n### writeAuthor(String name, String email = null, String uri = null)\n### writeAuthorRAW(String value)\n### writeContributor(String name, String email = null, String uri = null)\n### writeCategory(String term, String scheme = null, String label = null)\n### startEntry(String id, Date updated = null, Date created = null)\n### writeContent(String value, String type = null, String lang = null)\n### endEntry()\n### endFeed()\n### writeSearch(String url)\n### writeTotalResults(String value)\n### writeStartIndex(String value)\n### writeItemsPerPage(String value)\n### writeQuery(String searchTerms, Number startPage = 1, String role = 'request')\n### writeGenerator(String value, String version = null, String uri = null)\n\n\n# Also\n\n* http://dojotoolkit.org/reference-guide/1.7/dojox/atom/io/model.html\n* https://github.com/wezm/node-genx\n\n# License\n\n[MIT/X11](./LICENSE)\n",
  "readmeFilename": "README.md",
  "_id": "atom-writer@1.0.2",
  "dist": {
    "shasum": "04bbdc04a63a6c10ee779062a5a5bce046ccc759"
  },
  "_from": "atom-writer@*"
}
