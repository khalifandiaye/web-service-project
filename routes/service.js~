
/*
 * GET home page.
 */



var UNSUPPORTED_MEDIA = 415,
    INTERNAL_ERROR = 500;


var errorResponse = function(code, err, res) {
  res.writeHead(code, {"Content-Type": "text/plain"});
  res.write(err + "\n");
  res.end();
}

var collectionsFeedSender

exports.collections = function(req, res){
  var fs = require('fs');

  fs.exists('./media/collections.atom', function (exists) {
   
    if (exists) {
      //we have the file
      fs.readFile('./media/collections.atom', function (err, data) {
        if (err) {
          //unexpected internal error
	  errorResponse(INTERNAL_ERROR,err, res);
	} else {
	  res.writeHead(200, {"Content-Type": "application/atom+xml"});
	  res.write(data);
	  res.end();
	}
	
      });      

    } else {
      //generate the atom feed
      var uuid = require('node-uuid');
      var date = new Date();
      var data = '<?xml version="1.0" encoding="utf-8"?>\n'
		+'<feed xmlns="http://www.w3.org/2005/Atom"'
		+'xmlns:app="http://www.w3.org/2007/app">\n'
		+'<title>Collections</title>\n'
		+'<updated>'+date.toISOString()+'</updated>\n'
		+'<id>urn:uuid:'+uuid.v1()+'</id>\n' 
		+'<app:collection href="">\n'
		+'<title>Collections</title>\n'
		+'<app:accept>application/atom+xml;type=entry</app:accept>\n'
		+'</app:collection>\n';
		
	res.writeHead(200, {"Content-Type": "application/atom+xml"});
	res.write(data +'</feed>\n');
	res.end();
	fs.writeFile('./media/collections.atom', data, function (err) {
  	  if (!err)
  	    console.log('./media/collections.atom created');
	});
	
    }
  }); 
};

var nextFolder = function (files) {
  var max = 1;
  var intRegex = /^\d+$/;
  for (var i in files) {
    if(intRegex.test(files[i]) && (parseInt(files[i]) > max)) 
      max = parseInt(files[i]);
        
  }
  max++;
  return max; 
};

exports.newCollection = function(req, res){
  var xml2js = require('xml2js');
  var parser = new xml2js.Parser();
  
  var newEntry;
  req.on("data", function(data) {
    parser.parseString(data, function(err, result){
       newEntry = result;
    });
  });
  
  req.on("end", function(){
    var content_type = req.headers['content-type'];
    if ((content_type == 'application/atom+xml;type=entry') && newEntry.entry) {
      var xmlEntry;
      var uuid = require('node-uuid');
      var id = 'urn:uuid:'+uuid.v1();
      var date = new Date();
      var title;
      if (newEntry.entry['title'])
	title = newEntry.entry['title']
      else title = "no name"; 
      xmlEntry = '<?xml version="1.0" encoding="utf-8"?>\n' 
               + '<entry>\n'
               + '<id>' + id + '</id>\n'
               + '<title>' + title + '</title>\n'    
               + '<updated>' + date.toISOString() + '</updated>\n';
      if (newEntry.entry['author'])
	xmlEntry = xmlEntry + '<author>' + newEntry.entry['author'] + '</author>';
      if (newEntry.entry['rights'])
	xmlEntry = xmlEntry + '<rights>' + newEntry.entry['rights'] + '</rights>';
      
      var fs = require('fs');
      fs.readdir('./media/', function(err, files){
	if (err) {
          //unexpected internal error
          errorResponse(INTERNAL_ERROR,err, res);
        } else {
          var folder = nextFolder(files);
          fs.mkdir('./media/' + folder, function(err){
	    if (err) errorResponse(INTERNAL_ERROR,err, res);
	    else { 
	      console.log('created folder ./media/' + folder);
	      xmlEntry = xmlEntry + '<link rel="self" href="'
	               + folder + '"/>\n'
		       + '<link rel="edit" type="application/atom+xml;type=entry" href="'
		       + folder + '"/>\n';
	      xmlEntry = xmlEntry + '</entry>';
	      //send response
	      var location = req.headers['host'] + '/' + folder;	
	      res.writeHead(201, {"Content-Type": "application/atom+xml;type=entry",
				  "Location": location});
              res.write(xmlEntry + "\n");
              res.end();

	      //save into file			
	      fs.writeFile('./media/' + folder + '/entry.xml', xmlEntry, function (err) {
		console.log("created entry.xml");
	      });
            }
          });
        }
      });
      
    } else {
      errorResponse(UNSUPPORTED_MEDIA, "only application/atom+xml;type=entry accepted\n", 
											res);
    }
  });
};


